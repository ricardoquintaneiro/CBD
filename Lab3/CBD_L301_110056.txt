cqlsh> CREATE KEYSPACE FirstKeyspace WITH replication = {'class': 'SimpleSt
rategy', 'replication_factor' : 3};

Warnings :
Your replication factor 3 for keyspace firstkeyspace is higher than the number of nodes 1

cqlsh> HELP

Documented shell commands:
===========================
CAPTURE  CLS          COPY  DESCRIBE  EXPAND  LOGIN   SERIAL  SOURCE   UNICODE
CLEAR    CONSISTENCY  DESC  EXIT      HELP    PAGING  SHOW    TRACING

CQL help topics:
================
AGGREGATES               CREATE_KEYSPACE           DROP_TRIGGER      TEXT     
ALTER_KEYSPACE           CREATE_MATERIALIZED_VIEW  DROP_TYPE         TIME     
ALTER_MATERIALIZED_VIEW  CREATE_ROLE               DROP_USER         TIMESTAMP
ALTER_TABLE              CREATE_TABLE              FUNCTIONS         TRUNCATE 
ALTER_TYPE               CREATE_TRIGGER            GRANT             TYPES    
ALTER_USER               CREATE_TYPE               INSERT            UPDATE   
APPLY                    CREATE_USER               INSERT_JSON       USE      
ASCII                    DATE                      INT               UUID     
BATCH                    DELETE                    JSON            
BEGIN                    DROP_AGGREGATE            KEYWORDS        
BLOB                     DROP_COLUMNFAMILY         LIST_PERMISSIONS
BOOLEAN                  DROP_FUNCTION             LIST_ROLES      
COUNTER                  DROP_INDEX                LIST_USERS      
CREATE_AGGREGATE         DROP_KEYSPACE             PERMISSIONS     
CREATE_COLUMNFAMILY      DROP_MATERIALIZED_VIEW    REVOKE          
CREATE_FUNCTION          DROP_ROLE                 SELECT          
CREATE_INDEX             DROP_TABLE                SELECT_JSON


cqlsh> use FirstKeyspace;
cqlsh:firstkeyspace> CREATE TABLE teste(id uuid, texto text, PRIMARY KEY (id, texto));
cqlsh:firstkeyspace> INSERT INTO teste(uuid(), 'texto de teste');
SyntaxException: line 1:22 mismatched input '(' expecting ')' (INSERT INTO teste(uuid[(]...)
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste');
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste1'), (uuid(), 'texto de teste2'); -- NÃO É POSSÍVEL EM CASSANDRA
SyntaxException: line 1:63 mismatched input ',' expecting EOF (...values (uuid(), 'texto de teste1')[,]...)
cqlsh:firstkeyspace> select * from teste;

 id                                   | texto
--------------------------------------+----------------
 7b05476d-e688-4bbc-9cbf-de8a8de54386 | texto de teste

(1 rows)
cqlsh:firstkeyspace> select * from teste where texto='texto de teste';
InvalidRequest: Error from server: code=2200 [Invalid query] message="Cannot execute this query as it might involve data filtering and thus may have unpredictable performance. If you want to execute this query despite the performance unpredictability, use ALLOW FILTERING"
cqlsh:firstkeyspace> select * from teste where texto='texto de teste' ALLOW FILTERING; -- TENTAR EVITAR AO MÁXIMO, MODELAR A BASE DE DADOS PARA O EFEITO

 id                                   | texto
--------------------------------------+----------------
 7b05476d-e688-4bbc-9cbf-de8a8de54386 | texto de teste

(1 rows)
cqlsh:firstkeyspace> select * from teste where id=7b05476d-e688-4bbc-9cbf-de8a8de54386;

 id                                   | texto
--------------------------------------+----------------
 7b05476d-e688-4bbc-9cbf-de8a8de54386 | texto de teste

(1 rows)
cqlsh:firstkeyspace> delete from teste;
SyntaxException: line 1:17 mismatched input ';' expecting K_WHERE
cqlsh:firstkeyspace> delete from teste where id=7b05476d-e688-4bbc-9cbf-de8a8de54386;
cqlsh:firstkeyspace> select * from teste;

 id | texto
----+-------

(0 rows)
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste');
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste');
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste');
cqlsh:firstkeyspace> INSERT INTO teste(id, texto) values (uuid(), 'texto de teste');
cqlsh:firstkeyspace> select * from teste;

 id                                   | texto
--------------------------------------+----------------
 7fb1ffd7-4a98-4ec0-8dde-5a4bc484d569 | texto de teste
 ab0bce0b-cb06-4191-8a6d-d79be5abaa7b | texto de teste
 f98bfd23-dfc8-4b5b-8bd3-ceff19659a14 | texto de teste
 a0af36b7-620f-4b1a-92bb-ac77ecd0ca7d | texto de teste

(4 rows)
cqlsh:firstkeyspace> truncate teste; -- APAGA TODOS OS REGISTOS DA TABELA
cqlsh:firstkeyspace> select * from teste;

 id | texto
----+-------

(0 rows)
cqlsh:firstkeyspace> drop table teste;
cqlsh:firstkeyspace> select * from teste;
InvalidRequest: Error from server: code=2200 [Invalid query] message="table teste does not exist"

cqlsh:firstkeyspace> describe firstkeyspace;

CREATE KEYSPACE firstkeyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '3'}  AND durable_writes = true;
cqlsh:firstkeyspace> CREATE TABLE teste(id uuid, texto text, PRIMARY KEY (id, texto));
cqlsh:firstkeyspace> describe teste; -- DESCREVE A TABELA, MUITO ÚTIL PARA VERIFICAR AS PROPRIEDADES DA TABELA

CREATE TABLE firstkeyspace.teste (
    id uuid,
    texto text,
    PRIMARY KEY (id, texto)
) WITH CLUSTERING ORDER BY (texto ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND memtable = 'default'
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';